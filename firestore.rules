rules_version = '2';
service cloud.firestore {
	match /databases/{database}/documents {
		match /{document=**} {
			allow read, write: if false;
		}

		function isRequestResourceOwner() {
			return request.auth.uid == request.resource.data.userId;
		}

		function isResourceOwner() {
			return request.auth.uid == resource.data.userId;
		}

		// match /users/{userId} {
		//  allow read, write: if request.auth.uid == userId;
		// }

		match /settings/{userId} {
			allow read, write: if request.auth.uid == userId;
		}

		match /clients/{clientId} {
			allow read: if isResourceOwner();
			allow create: if isRequestResourceOwner();
			allow update: if isRequestResourceOwner() && isResourceOwner();
			// allow delete: if isResourceOwner();
			// allow delete: if false;
		}

		match /items/{itemId} {
			allow read: if isResourceOwner();
			allow create: if isRequestResourceOwner();
			allow update: if isRequestResourceOwner() && isResourceOwner();
			// allow delete: if isResourceOwner();
			// allow delete: if false;
		}

		match /notes/{noteId} {
			allow read: if isResourceOwner();
			allow create: if isRequestResourceOwner();
			allow update: if isRequestResourceOwner() && isResourceOwner();
			// allow delete: if isResourceOwner();
			// allow delete: if false;
		}

		match /invoices/{invoiceId} {
			allow read: if isResourceOwner();
			allow create: if isRequestResourceOwner();
			allow update: if isRequestResourceOwner() && isResourceOwner();
			// allow delete: if isResourceOwner();
			// allow delete: if false;
		}

		match /employees/{employeeId} {
			allow read: if isResourceOwner();
			allow create: if isRequestResourceOwner();
			allow update: if isRequestResourceOwner() && isResourceOwner();
			// allow delete: if isResourceOwner();
			// allow delete: if false;
		}
	}
}
